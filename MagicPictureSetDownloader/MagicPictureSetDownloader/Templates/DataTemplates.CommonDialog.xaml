<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"

                    xmlns:system="clr-namespace:System;assembly=System.Runtime"
                    
                    xmlns:edition="clr-namespace:MagicPictureSetDownloader.ViewModel.Download.Edition;assembly=MagicPictureSetDownloader.ViewModel"
                    xmlns:management="clr-namespace:MagicPictureSetDownloader.ViewModel.Management;assembly=MagicPictureSetDownloader.ViewModel"
                    xmlns:input="clr-namespace:MagicPictureSetDownloader.ViewModel.Input;assembly=MagicPictureSetDownloader.ViewModel"
                    xmlns:option="clr-namespace:MagicPictureSetDownloader.ViewModel.Option;assembly=MagicPictureSetDownloader.ViewModel"
                    xmlns:conv="clr-namespace:MagicPictureSetDownloader.Converter"
                    xmlns:fl="http://schemas.fleurlotus.com/xaml/"

                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    mc:Ignorable="d"
                   >
    <DataTemplate DataType="{x:Type option:OptionsChangeViewModel}" d:IsDesignTimeCreatable="False">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <GroupBox Grid.Row="0" Header="Display">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <CheckBox Grid.Row="0" VerticalAlignment="Center" Content="Show picture" IsChecked="{fl:TwoWayBinding Options.ShowPicture}"/>
                    <CheckBox Grid.Row="1" VerticalAlignment="Center" Content="Show picture variations" IsChecked="{fl:TwoWayBinding Options.ShowVariationPicture}"/>
                    <CheckBox Grid.Row="2" VerticalAlignment="Center" Content="Show prices" IsChecked="{fl:TwoWayBinding Options.ShowPrices}"/>
                    <CheckBox Grid.Row="3" VerticalAlignment="Center" Content="Show other languages" IsChecked="{fl:TwoWayBinding Options.ShowOtherLanguages}"/>
                    <CheckBox Grid.Row="4" VerticalAlignment="Center" Content="Show statistics" IsChecked="{fl:TwoWayBinding Options.ShowStatistics}"/>
                    <CheckBox Grid.Row="5" VerticalAlignment="Center" Content="Only current collection" Margin="20,0,0,0" 
                              IsChecked="{fl:TwoWayBinding Options.ShowOnlyCurrentStatistics}" IsEnabled="{Binding Options.ShowStatistics}"/>
                </Grid>
            </GroupBox>
         
            <GroupBox Grid.Row="1" Header="Update">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" /> 
                    </Grid.RowDefinitions>
                    <CheckBox Grid.Row="0" VerticalAlignment="Center" Content="Auto check upgrade at startup" IsChecked="{fl:TwoWayBinding Options.AutoCheckUpgrade}"/>
                </Grid>
            </GroupBox>
        </Grid>
    </DataTemplate>

    <!-- Part source of Card move -->
    <DataTemplate DataType="{x:Type input:CardSourceViewModel}" d:IsDesignTimeCreatable="False">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Label Grid.Row="0" HorizontalAlignment="Center" FontWeight="Bold" FontSize="15" Content="{Binding Card}" ContentStringFormat="{}Card : {0}" />

            <GroupBox Grid.Row="1" Header="Source">
                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="70"/>
                        <ColumnDefinition Width="70"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" Grid.Column="0" Content="Edition" Padding="10,0,0,0" VerticalContentAlignment="Center"/>
                    <ComboBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Margin="10,2" ItemsSource="{Binding Editions}" SelectedItem="{fl:TwoWayBinding EditionSelected}"  />
                    <Image Grid.Row="0" Grid.Column="3" HorizontalAlignment="Left" Width="20" Height="20" Source="{Binding EditionSelected.Name, Converter={conv:TreeToTreeImageConverter}}"/>
                    
                    <Label Grid.Row="1" Grid.Column="0" Content="Language" Padding="10,0,0,0" VerticalContentAlignment="Center"/>
                    <ComboBox Grid.Row="1" Grid.Column="1" Margin="10,2" ItemsSource="{Binding Languages}" SelectedItem="{fl:TwoWayBinding LanguageSelected}"  />
                    <CheckBox Grid.Row="1" Grid.Column="2"  VerticalAlignment="Center" Content="Foil" IsChecked="{fl:TwoWayBinding IsFoil}"/>
                    <CheckBox Grid.Row="1" Grid.Column="3"  VerticalAlignment="Center" Content="Alt Art" IsChecked="{fl:TwoWayBinding IsAltArt}"/>
                </Grid>
            </GroupBox>
        </Grid>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type input:CardRemoveViewModel}" d:IsDesignTimeCreatable="False">
        <Grid Margin="5" Width="400">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ContentControl Grid.Row="0" Content="{Binding Source}" />

            <GroupBox Grid.Row="1" Header="Quantity">
                <Control Template="{StaticResource QuantityControlTemplate}" DataContext="{Binding Source}"/>
            </GroupBox>
        </Grid>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type input:CardMoveOrCopyViewModel}" d:IsDesignTimeCreatable="False">
        <Grid Margin="5" Width="400">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ContentControl Grid.Row="0" Content="{Binding Source}" />

            <GroupBox Grid.Row="1" Header="Destination">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="70"/>
                    </Grid.ColumnDefinitions>

                    <CheckBox Grid.Row="0" Grid.Column="1" Content="For copy" Margin="10,2" FontWeight="Bold" IsChecked="{fl:TwoWayBinding Copy}"/>
                    <Label Grid.Column="0" Grid.Row="1" Content="Collection" Padding="10,0,0,0" VerticalContentAlignment="Center" />
                    <ComboBox Grid.Column="1" Grid.Row="1" Margin="10,2" ItemsSource="{Binding Collections}" SelectedItem="{fl:TwoWayBinding CardCollectionSelected}" />

                    <Control Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Template="{StaticResource QuantityControlTemplate}" DataContext="{Binding Source}"/>
                </Grid>
            </GroupBox>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type input:CardUpdateViewModel}" d:IsDesignTimeCreatable="False">
        <Grid Margin="5" Width="400">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ContentControl Grid.Row="0" Content="{Binding Source}" />
            
            <GroupBox Grid.Row="1" Header="Destination">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="70"/>
                        <ColumnDefinition Width="70"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Row="0" Grid.Column="0" Content="Edition" Padding="10,0,0,0" VerticalContentAlignment="Center" />
                    <ComboBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Margin="10,2" ItemsSource="{Binding Editions}" SelectedItem="{fl:TwoWayBinding EditionSelected}" />
                    <Image Grid.Row="0" Grid.Column="3" HorizontalAlignment="Left" Width="20" Height="20" Source="{Binding EditionSelected.Name, Converter={conv:TreeToTreeImageConverter}}"/>
                    
                    <Label Grid.Row="1" Grid.Column="0" Content="Language" Padding="10,0,0,0" VerticalContentAlignment="Center" />
                    <ComboBox Grid.Row="1" Grid.Column="1" Margin="10,2" ItemsSource="{Binding Languages}" SelectedItem="{fl:TwoWayBinding LanguageSelected}" />
                    <CheckBox Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" Content="Foil" IsChecked="{fl:TwoWayBinding IsFoil}" IsEnabled="{Binding EditionSelected.HasFoil}"/>
                    <CheckBox Grid.Row="1" Grid.Column="3" VerticalAlignment="Center" Content="Alt Art" IsChecked="{fl:TwoWayBinding IsAltArt}"/>

                    <Control Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4" Template="{StaticResource QuantityControlTemplate}" DataContext="{Binding Source}"/>
                </Grid>
            </GroupBox>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type input:SearchViewModel}" d:IsDesignTimeCreatable="False">
        <DataTemplate.Resources>
            <Style TargetType="Label">
                <Setter Property="FontWeight" Value="Bold"/>
            </Style>
            <Style TargetType="xctk:CheckComboBox">
                <Setter Property="MinHeight" Value="25"/>
            </Style>
        </DataTemplate.Resources>
        <Grid Width="470">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="180"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="20"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Label Grid.Column="0" Grid.Row="0" Content="Name"/>
            <TextBox Grid.Column="1" Grid.Row="0" Margin="5,0" Style="{StaticResource BorderedTextBox}" Text="{fl:TwoWayBinding Name}"/>
            <CheckBox Grid.Column="2" Grid.Row="0" Content="All languages" VerticalAlignment="Center" IsChecked="{fl:TwoWayBinding AllLanguages}"/>

            <Label Grid.Column="0" Grid.Row="2" Grid.RowSpan="4" Content="Perimeter" />
            <RadioButton Grid.Column="1" Grid.Row="2" Margin="5,0" GroupName="Perimeter" Content="All existing cards" IsChecked="{fl:TwoWayBinding PerimeterScope, Converter={fl:EnumMatchToBooleanConverter}, ConverterParameter=All}"/>
            <RadioButton Grid.Column="1" Grid.Row="3" Margin="5,0" GroupName="Perimeter" Content="Based on collection" IsChecked="{fl:TwoWayBinding PerimeterScope, Converter={fl:EnumMatchToBooleanConverter}, ConverterParameter=CollectionBased}"/>

            <CheckBox Grid.Column="2" Grid.Row="2" Content="Exclude fun editions" IsChecked="{fl:TwoWayBinding ExcludeFunEditions}"/>
            <CheckBox Grid.Column="2" Grid.Row="3" Content="Exclude online only editions" IsChecked="{fl:TwoWayBinding ExcludeOnlineOnlyEditions}"/>
            <CheckBox Grid.Column="2" Grid.Row="4" Content="Exclude special card" IsChecked="{fl:TwoWayBinding ExcludeSpecialCards}"/>

            <xctk:CheckComboBox Grid.Column="1" Grid.Row="5" Grid.ColumnSpan="2" Margin="5,10,5,0" ItemsSource="{Binding Collections}" SelectedItemsOverride="{Binding CollectionsSelected}" Visibility="{Binding PerimeterScope, Converter={fl:AggregateConverter {fl:EnumMatchToBooleanConverter}, {fl:BoolToVisibilityConverter}}, ConverterParameter=CollectionBased}"/>
            <Grid Grid.Column="1" Grid.Row="6" Grid.ColumnSpan="2" Margin="5,0" Visibility="{Binding PerimeterScope, Converter={fl:AggregateConverter {fl:EnumMatchToBooleanConverter}, {fl:BoolToVisibilityConverter}}, ConverterParameter=CollectionBased}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <ComboBox Grid.Row="0" Grid.Column="0" ItemsSource="{Binding CountComparator}" SelectedItem="{fl:TwoWayBinding CountComparatorSelected}" />
                <xctk:IntegerUpDown Grid.Row="0" Grid.Column="1" Maximum="99" Minimum="1" HorizontalAlignment="Left" Width="50" Value="{fl:TwoWayBinding CountSelected}" />
                <CheckBox Grid.Row="0" Grid.Column="2" Margin="20,0" Content="Include foil" VerticalAlignment="Center" IsChecked="{fl:TwoWayBinding CountIncludeFoil}"/>
                <CheckBox Grid.Row="0" Grid.Column="3" Content="Use name (all editions)" VerticalAlignment="Center" IsChecked="{fl:TwoWayBinding CountIsNameBased}"/>
                <CheckBox Grid.Row="1" Grid.Column="2" Margin="20,0" Content="Include alt art" VerticalAlignment="Center" IsChecked="{fl:TwoWayBinding CountIncludeAltArt}"/>
            </Grid>
            
            <Label Grid.Column="0" Grid.Row="8" Content="Editions"/>
            <xctk:CheckComboBox Grid.Column="1" Grid.Row="8" Grid.ColumnSpan="2" Margin="5,0" ItemsSource="{Binding Editions}" SelectedItemsOverride="{Binding EditionsSelected}"/>

            <StackPanel Grid.Column="1" Grid.Row="10" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">
                <RadioButton GroupName="Color" Width="50" Content="Or" IsChecked="{fl:TwoWayBinding ColorAggregation, Converter={fl:EnumMatchToBooleanConverter}, ConverterParameter=Or}"/>
                <RadioButton GroupName="Color" Width="50" Content="And" IsChecked="{fl:TwoWayBinding ColorAggregation, Converter={fl:EnumMatchToBooleanConverter}, ConverterParameter=And}"/>
            </StackPanel>
            <Label Grid.Column="0" Grid.Row="11" Content="Colors" />
            <xctk:CheckComboBox Grid.Column="1" Grid.Row="11" Grid.ColumnSpan="2" Margin="5,0" ItemsSource="{Binding Colors}" SelectedItemsOverride="{Binding ColorsSelected}"/>

            <StackPanel Grid.Column="1" Grid.Row="13" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">
                <RadioButton GroupName="Type" Width="50" Content="Or" IsChecked="{fl:TwoWayBinding TypeAggregation, Converter={fl:EnumMatchToBooleanConverter}, ConverterParameter=Or}"/>
                <RadioButton GroupName="Type" Width="50" Content="And" IsChecked="{fl:TwoWayBinding TypeAggregation, Converter={fl:EnumMatchToBooleanConverter}, ConverterParameter=And}"/>
            </StackPanel>
            <Label Grid.Column="0" Grid.Row="14" Content="Types" VerticalAlignment="Center"/>
            <xctk:CheckComboBox Grid.Column="1" Grid.Row="14" Grid.ColumnSpan="2" Margin="5,0" ItemsSource="{Binding Types}" SelectedItemsOverride="{Binding TypesSelected}"/>
 
            <StackPanel Grid.Column="1" Grid.Row="16" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">
                <RadioButton GroupName="SubType" Width="50" Content="Or" IsChecked="{fl:TwoWayBinding SubTypeAggregation, Converter={fl:EnumMatchToBooleanConverter}, ConverterParameter=Or}"/>
                <RadioButton GroupName="SubType" Width="50" Content="And" IsChecked="{fl:TwoWayBinding SubTypeAggregation, Converter={fl:EnumMatchToBooleanConverter}, ConverterParameter=And}"/>
            </StackPanel>
            <Label Grid.Column="0" Grid.Row="17" Content="SubTypes" VerticalAlignment="Center"/>
            <xctk:CheckComboBox Grid.Column="1" Grid.Row="17" Grid.ColumnSpan="2" Margin="5,0" ItemsSource="{Binding SubTypes}" SelectedItemsOverride="{Binding SubTypesSelected}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type input:CardInputViewModel}" d:IsDesignTimeCreatable="False">
        <DataTemplate.Resources>
            <Style TargetType="Label">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Margin" Value="5,0"/>
            </Style>
        </DataTemplate.Resources>
        <Grid Width="401">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <GroupBox Grid.Row="0" Header="Input options">
                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Column="0" Grid.Row="0" Margin="0,5" Orientation="Horizontal" HorizontalAlignment="Center"
                                Grid.ColumnSpan="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ColumnDefinitions.Count, Mode=OneWay}" >
                        <RadioButton Margin="0,0,10,0" GroupName="All" Content="Input by Edition"
                         IsChecked="{fl:TwoWayBinding InputMode, Converter={fl:EnumMatchToBooleanConverter}, ConverterParameter=ByEdition}" />
                        <RadioButton Margin="10,0,0,0" GroupName="All" Content="Input by Card"
                         IsChecked="{fl:TwoWayBinding InputMode, Converter={fl:EnumMatchToBooleanConverter}, ConverterParameter=ByCard}" />
                    </StackPanel>

                    <Label Grid.Column="0" Grid.Row="1" Content="{Binding InputLanguageName}" ContentStringFormat="{}Language: {0}"/>
                    <Button Grid.Column="1" Grid.Row="1" Content="Change" Command="{Binding ChangeInputLanguageCommand}" Width="70" VerticalAlignment="Center"/>
               </Grid>
            </GroupBox>
            
            <GroupBox Grid.Row="1" Header="Card">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" Content="Card name" Visibility="{Binding InputMode, Converter={fl:AggregateConverter {fl:EnumMatchToBooleanConverter}, {fl:BoolToVisibilityConverter}}, ConverterParameter=ByCard}" />
                    <ComboBox Grid.Column="1" Grid.Row="0" IsEditable="True" Visibility="{Binding InputMode, Converter={fl:AggregateConverter {fl:EnumMatchToBooleanConverter}, {fl:BoolToVisibilityConverter}}, ConverterParameter=ByCard}" 
                              fl:AutoComplete.Enabled="True" fl:AutoComplete.CaseInsensitive="True" SelectedValue="{fl:TwoWayBinding CardSelectedName}" ItemsSource="{Binding Cards}"
                              fl:FocusBehavior.IsFocused="{Binding IsFocused}" >
                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>
                    </ComboBox>

                    <Label Grid.Column="0" Grid.Row="1" Content="Edition" />
                    <ComboBox Grid.Column="1" Grid.Row="1" IsEditable="True" fl:AutoComplete.Enabled="True" fl:AutoComplete.CaseInsensitive="True" 
                              SelectedValue="{fl:TwoWayBinding EditionSelected}" ItemsSource="{Binding Editions}" />
                    <Image Grid.Column="2" Grid.Row="1" HorizontalAlignment="Left" Margin="5,0,0,0" Width="20" Height="20" Source="{Binding EditionSelected.Name, Converter={conv:TreeToTreeImageConverter}}"/>

                    <Label Grid.Column="0" Grid.Row="2" Content="Card name" Visibility="{Binding InputMode, Converter={fl:AggregateConverter {fl:EnumMatchToBooleanConverter}, {fl:BoolInvertConverter}, {fl:BoolToVisibilityConverter}}, ConverterParameter=ByCard}" />
                    <ComboBox Grid.Column="1" Grid.Row="2" IsEditable="True" Visibility="{Binding InputMode, Converter={fl:AggregateConverter {fl:EnumMatchToBooleanConverter}, {fl:BoolInvertConverter}, {fl:BoolToVisibilityConverter}}, ConverterParameter=ByCard}" 
                              fl:AutoComplete.Enabled="True" fl:AutoComplete.CaseInsensitive="True" SelectedValue="{fl:TwoWayBinding CardSelectedName}" ItemsSource="{Binding Cards}"
                              fl:FocusBehavior.IsFocused="{Binding IsFocused}" >
                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>
                    </ComboBox>
                </Grid>
            </GroupBox>

            <GroupBox Grid.Row="2" Header="Detail">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Row="0" Grid.Column="0" Content="Language" />
                    <ComboBox Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3" ItemsSource="{Binding Languages}" SelectedItem="{fl:TwoWayBinding LanguageSelected}" />

                    <Border Grid.Row="1" Grid.Column="0" BorderBrush="Black" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="1" Visibility="{Binding LanguageSelected, Converter={fl:AggregateConverter {fl:ObjectNullToBoolConverter}, {fl:BoolInvertConverter}, {fl:BoolToVisibilityConverter}}}">
                        <Image Width="30" Source="{Binding LanguageSelected.Name, Converter={conv:TreeToTreeImageConverter}}" />
                    </Border>
                    <TextBlock Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" VerticalAlignment="Center" Text="{Binding Translate}" />

                    <Label Grid.Row="2" Grid.Column="0" Content="Quantity" />
                    <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal">
                        <xctk:IntegerUpDown  Maximum="{Binding MaxCount}" Minimum="{Binding MinCount}" HorizontalAlignment="Left" Width="50" Value="{fl:TwoWayBinding Count}" Margin="0,0,10,0"/>
                        <Button Content="+1" Command="{Binding IncreaseQuantityCommand}" CommandParameter="1" Width="20" Height="20" />
                        <Button Content="+2" Command="{Binding IncreaseQuantityCommand}" CommandParameter="2" Width="20" Height="20" />
                        <Button Content="+3" Command="{Binding IncreaseQuantityCommand}" CommandParameter="3" Width="20" Height="20" />
                        <Button Content="+4" Command="{Binding IncreaseQuantityCommand}" CommandParameter="4" Width="20" Height="20" />
                    </StackPanel>
                    <CheckBox Grid.Row="2" Grid.Column="2" VerticalAlignment="Center" Margin="0,0,10,0" Content="Foil" IsChecked="{fl:TwoWayBinding IsFoil}" IsEnabled="{Binding EditionSelected.HasFoil}"/>
                    <CheckBox Grid.Row="2" Grid.Column="3" VerticalAlignment="Center" Margin="0,0,10,0" Content="Alt Art" IsChecked="{fl:TwoWayBinding IsAltArt}"/>
                </Grid>
            </GroupBox>

            <GroupBox Grid.Row="3" Header="{Binding CardCollection.Name}" HeaderStringFormat="{}In collection {0}">
                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Height="70" Content="{Binding CurrentCollectionDetail}" />
                    <Button Grid.Column="1" Content="Change" Command="{Binding ChangeCollectionCommand}" Width="70" VerticalAlignment="Center"/>
                </Grid>
            </GroupBox>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type management:AuditViewModel}" d:IsDesignTimeCreatable="False">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*" MinHeight="200"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" Content="Start date"/>
                <DatePicker Grid.Column="1" HorizontalAlignment="Left" SelectedDate="{Binding MinDate}"/>
                <Label Grid.Column="2" Content="End date"/>
                <DatePicker Grid.Column="3" HorizontalAlignment="Left" SelectedDate="{Binding MaxDate}"/>
            </Grid>
            <DataGrid Grid.Row="1" Margin="5" CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False" MaxHeight="500" RowHeight="25"
                      AlternatingRowBackground="Gainsboro"  AlternationCount="2" SelectionMode="Single" SelectionUnit="FullRow" CanUserSortColumns="False"
                      ItemsSource="{Binding AuditInfos}" Visibility="{Binding AuditInfos.Count, Converter={fl:AggregateConverter {fl:ValueIsZeroToBoolConverter}, {fl:BoolInvertConverter}, {fl:BoolToVisibilityConverter}}}">
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Date" Binding="{Binding OperationDate}" CellStyle="{StaticResource DataGridCellVCenter}"/>
                    <DataGridTextColumn Header="Quantity" Binding="{Binding Quantity}" CellStyle="{StaticResource DataGridCellHVCenter}"/>
                    <DataGridTextColumn Header="Collection" Binding="{Binding CollectionName}" CellStyle="{StaticResource DataGridCellVCenter}"/>
                    <DataGridTextColumn Header="Card" Binding="{Binding CardName}" CellStyle="{StaticResource DataGridCellVCenter}"/>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <!-- ReSharper disable Xaml.BindingWithContextNotResolved -->
                                <Image Width="25" VerticalAlignment="Center"  Source="{Binding EditionName, Converter={conv:TreeToTreeImageConverter}}" />
                                <!-- ReSharper restore Xaml.BindingWithContextNotResolved -->
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Edition" Binding="{Binding EditionName}" CellStyle="{StaticResource DataGridCellVCenter}"/>
                    <DataGridTextColumn Header="Language" Binding="{Binding Language}" CellStyle="{StaticResource DataGridCellVCenter}"/>
                    <DataGridCheckBoxColumn Header="IsFoil" Binding="{Binding IsFoil}" CellStyle="{StaticResource DataGridCellVCenter}"/>
                    <DataGridCheckBoxColumn Header="IsAltArt" Binding="{Binding IsAltArt}" CellStyle="{StaticResource DataGridCellVCenter}"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type input:CardCollectionInputGraphicViewModel}" d:IsDesignTimeCreatable="False">
        <Border BorderBrush="Black" BorderThickness="1">
            <Grid>
                <Grid.InputBindings>
                    <MouseBinding Gesture="RightClick" Command="{Binding RemoveCommand}" />
                    <MouseBinding Gesture="LeftClick" Command="{Binding AddCommand}" />
                </Grid.InputBindings>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
            
                <Image Grid.Row="0" Stretch="Uniform"
                       ToolTip="{Binding NameInLanguage}" Source="{Binding Card, Converter={conv:CardToImageConverter}, ConverterParameter=0}" 
                       Width="{Binding DataContext.Size, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}" 
                       />
                <Label Grid.Row="1" VerticalContentAlignment="Center"  HorizontalContentAlignment="Center" Foreground="OrangeRed"
                       Background="{x:Null}" FontSize="10" Content="{Binding CountLabel}" />
            </Grid>
        </Border>
    </DataTemplate>
</ResourceDictionary>
