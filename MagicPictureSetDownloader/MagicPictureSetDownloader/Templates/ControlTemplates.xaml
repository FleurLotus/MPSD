<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:fl="http://schemas.fleurlotus.com/xaml/"
                    xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"

                    xmlns:l="clr-namespace:MagicPictureSetDownloader"
                    xmlns:main="clr-namespace:MagicPictureSetDownloader.ViewModel.Main;assembly=MagicPictureSetDownloader.ViewModel"
                    xmlns:input="clr-namespace:MagicPictureSetDownloader.ViewModel.Input;assembly=MagicPictureSetDownloader.ViewModel"
                    xmlns:conv="clr-namespace:MagicPictureSetDownloader.Converter"

                    mc:Ignorable="d"
                    >
    <!-- override the template of the TabControl to replace the header to have one line with scroll bar -->
    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
    <Style x:Key="TabControlStyle1" TargetType="{x:Type TabControl}">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        
                        <!-- Start of change -->
                        <!--  <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/> -->
                        <ScrollViewer x:Name="headerPanel" Background="Transparent" Grid.Column="0" Margin="2,2,2,0" Grid.Row="0" Panel.ZIndex="1" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto" >
                            <VirtualizingStackPanel Orientation="Horizontal" IsItemsHost="true" KeyboardNavigation.TabIndex="1" />
                        </ScrollViewer>
                        <!-- End of change  -->
                        <Border x:Name="contentPanel" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                            <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Control Template -->
    <!-- Card part display -->
    <ControlTemplate x:Key="CardInfoControlTemplate">
        <ControlTemplate.Resources>
            <Style TargetType="Label">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Margin" Value="5,0"/>
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="l:PicturedTextBlock">
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
        </ControlTemplate.Resources>
        <Grid d:DataContext="{d:DesignInstance Type=main:CardViewModel, IsDesignTimeCreatable=False}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="130" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Label Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Content="Part Name" FontSize="15" HorizontalAlignment="Right" Visibility="{Binding IsMultiPart, Converter={fl:BoolToVisibilityConverter}}" />
            <TextBlock Grid.Column="2" Grid.Row="0" Grid.ColumnSpan="2" FontSize="15" HorizontalAlignment="Left" Text="{Binding PartName}" Visibility="{Binding IsMultiPart, Converter={fl:BoolToVisibilityConverter}}" />

            <Label Grid.Column="0" Grid.Row="1" Content="Block"/>
            <TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding BlockName}"/>
            <Label Grid.Column="2" Grid.Row="1" Content="Edition"/>
            <TextBlock Grid.Column="3" Grid.Row="1" Text="{Binding Edition.Name}"/>
            <Label Grid.Column="0" Grid.Row="2" Content="Rarity"/>
            <TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding Rarity.Name}"/>
            <Label Grid.Column="2" Grid.Row="2" Content="Type"/>
            <TextBlock Grid.Column="3" Grid.Row="2" Text="{Binding Type}"/>
            <Label Grid.Column="0" Grid.Row="3" Content="Casting Cost" Visibility="{Binding CastingCost, Converter={fl:AggregateConverter {fl:ObjectNullToBoolConverter}, {fl:BoolInvertConverter}, {fl:BoolToVisibilityConverter}}}"/>
            <ItemsControl Grid.Column="1" Grid.Row="3" ItemsSource="{Binding DisplayedCastingCost}" Visibility="{Binding CastingCost, Converter={fl:AggregateConverter {fl:ObjectNullToBoolConverter}, {fl:BoolInvertConverter}, {fl:BoolToVisibilityConverter}}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Image Width="15" Height="15" Source="{Binding Converter={conv:StringToCastingCostImageConverter}}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <Label Grid.Column="2" Grid.Row="3" Content="{Binding PowerToughnessLoyaltyDefenseText}"
                   Visibility="{Binding PowerToughnessLoyaltyDefenseText, Converter={fl:AggregateConverter {fl:ObjectNullToBoolConverter}, {fl:BoolInvertConverter}, {fl:BoolToVisibilityConverter}}}"/>
            <TextBlock Grid.Column="3" Grid.Row="3" Text="{Binding PowerToughnessLoyaltyDefense}"
                   Visibility="{Binding PowerToughnessLoyaltyDefenseText, Converter={fl:AggregateConverter {fl:ObjectNullToBoolConverter}, {fl:BoolInvertConverter}, {fl:BoolToVisibilityConverter}}}"/>

            <Label Grid.Column="0" Grid.Row="5" Content="Text"/>
            <l:PicturedTextBlock Grid.Column="1" Grid.Row="5" Grid.ColumnSpan="3" TextWrapping="Wrap" InlineCollection="{Binding Text, Converter={conv:TextToInlinesConverter }}" />
        </Grid>
    </ControlTemplate>

    <!-- Statistics display -->
    <ControlTemplate x:Key="StatisticsControlTemplate">
        <ListView VerticalAlignment="Center" HorizontalAlignment="Left" d:DataContext="{d:DesignInstance Type=main:MainViewModel, IsDesignTimeCreatable=False}">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemsSource>
                <MultiBinding Converter="{conv:CardToStatisticsConverter}">
                    <Binding Path="Hierarchical.Selected"/>
                    <Binding Path="Options.ShowOnlyCurrentStatistics"/>
                    <Binding Path="Hierarchical.Name"/>
                </MultiBinding>
            </ListView.ItemsSource>
            <ListView.Visibility>
                <MultiBinding Converter="{conv:CardToStatisticsVisibleConverter}">
                    <Binding Path="Hierarchical.Selected"/>
                    <Binding Path="Options.ShowOnlyCurrentStatistics"/>
                    <Binding Path="Hierarchical.Name"/>
                </MultiBinding>
            </ListView.Visibility>
            <i:Interaction.Behaviors>
                <fl:GridViewColumnResizeBehavior />
            </i:Interaction.Behaviors>

            <ListView.View>
                <GridView AllowsColumnReorder="False" d:DataContext="{d:DesignInstance Type=main:StatisticViewModel, IsDesignTimeCreatable=False}">
                    <GridViewColumn Header="Collection" DisplayMemberBinding="{Binding Collection}"/>
                    <GridViewColumn Header="Edition" DisplayMemberBinding="{Binding Edition}"/>
                    <GridViewColumn Header="Language" DisplayMemberBinding="{Binding Language}"/>
                    <GridViewColumn Header="Number" Width="50">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Number}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Foil" Width="50">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding FoilNumber}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Alt Art" Width="50">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding AltArtNumber}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Foil Alt" Width="50">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding FoilAltArtNumber}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
    </ControlTemplate>

    <!-- Language Grid display -->
    <ControlTemplate x:Key="OtherLanguagesControlTemplate">
        <ListView VerticalAlignment="Center" HorizontalAlignment="Left" 
                  ItemsSource="{Binding Hierarchical.Selected, Converter={conv:CardToLanguagesTranslationConverter}}"
                  Visibility="{Binding Hierarchical.Selected, Converter={conv:CardToLanguagesTranslationVisibleConverter}}"
                  d:DataContext="{d:DesignInstance Type=main:MainViewModel, IsDesignTimeCreatable=False}">
            <i:Interaction.Behaviors>
                <fl:GridViewColumnResizeBehavior />
            </i:Interaction.Behaviors>

            <ListView.View>
                <GridView AllowsColumnReorder="False">
                    <GridViewColumn Header="Language">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <!-- Here the datacontext is a Dictionary<string, string>.KeyValuePair but generics is not supported for DesignInstance -->
                                    <!-- ReSharper disable Xaml.BindingWithContextNotResolved -->
                                    <Border Grid.Column="0" BorderBrush="Black" HorizontalAlignment="Center" VerticalAlignment="Center" BorderThickness="1">
                                        <svgc:SvgViewbox Width="30" Source="{Binding Key, Converter={conv:TreeToTreeImageConverter}}" />
                                    </Border>
                                    <TextBlock Grid.Column="1" Margin="5,0" Text="{Binding Key}"/>
                                    <!-- ReSharper restore Xaml.BindingWithContextNotResolved -->
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Value}"/>
                </GridView>
            </ListView.View>
        </ListView>
    </ControlTemplate>

    <!-- Prices Grid display -->
    <ControlTemplate x:Key="PricesControlTemplate">
        <ListView VerticalAlignment="Center" HorizontalAlignment="Left"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  ItemsSource="{Binding Hierarchical.Selected, Converter={conv:CardToPricesConverter}}"
                  Visibility="{Binding Hierarchical.Selected, Converter={conv:CardToPricesVisibleConverter}}"
                  d:DataContext="{d:DesignInstance Type=main:MainViewModel, IsDesignTimeCreatable=False}">
            <i:Interaction.Behaviors>
                <fl:GridViewColumnResizeBehavior />
            </i:Interaction.Behaviors>

            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="BorderBrush" Value="LightGray" />
                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.View>
                <GridView AllowsColumnReorder="False">
                    <GridViewColumn Header="Edtion" DisplayMemberBinding="{Binding EditionName}" />
                    <GridViewColumn Header="Foil">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding Foil, Mode=OneWay}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Value" DisplayMemberBinding="{Binding Converter={conv:ValueToPriceDisplayConverter}}"/>
                    <GridViewColumn Header="Date" DisplayMemberBinding="{Binding AddDate, StringFormat='dd/MM/yyyy'}" />
                    <GridViewColumn Header="Source" DisplayMemberBinding="{Binding Source}"/>
                </GridView>
            </ListView.View>
        </ListView>
    </ControlTemplate>
    
    <!-- Card picture display -->
    <ControlTemplate x:Key="ImageControlTemplate">
        <StackPanel Orientation="Horizontal" d:DataContext="{d:DesignInstance Type=main:MainViewModel, IsDesignTimeCreatable=False}">
            <Image Source="{Binding Hierarchical.Selected, Converter={fl:AggregateConverter {conv:HierarchicalResultNodeToCardConverter}, {conv:CardToImageConverter}}, ConverterParameter=0}" RenderTransformOrigin="0.5,0.5">
                <Image.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="{Binding Hierarchical.Selected, Converter={conv:CardToRotationAngleConverter}, ConverterParameter=0}" />
                        <TranslateTransform>
                            <TranslateTransform.X>
                                <MultiBinding Converter="{conv:HeightToMoveConverter}" ConverterParameter="0">
                                    <Binding Path="Hierarchical.Selected"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Image}}" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Image}}" />
                                </MultiBinding>
                            </TranslateTransform.X>
                        </TranslateTransform>
                    </TransformGroup>
                </Image.RenderTransform>
            </Image>
            <Image Source="{Binding Hierarchical.Selected, Converter={fl:AggregateConverter {conv:HierarchicalResultNodeToCardConverter}, {conv:CardToImageConverter}}, ConverterParameter=1}" RenderTransformOrigin="0.5,0.5" >
                <Image.RenderTransform>
                    <TransformGroup>
                        <RotateTransform Angle="{Binding Hierarchical.Selected, Converter={conv:CardToRotationAngleConverter}, ConverterParameter=1}" />
                        <TranslateTransform>
                            <TranslateTransform.X>
                                <MultiBinding Converter="{conv:HeightToMoveConverter}" ConverterParameter="1">
                                    <Binding Path="Hierarchical.Selected"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Image}}" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Image}}" />
                                </MultiBinding>
                            </TranslateTransform.X>
                        </TranslateTransform>
                    </TransformGroup>
                </Image.RenderTransform>
            </Image>
        </StackPanel>
    </ControlTemplate>

    <!-- Card picture display variations -->
    <ControlTemplate x:Key="VariationImageControlTemplate">
        <TabControl Style="{DynamicResource TabControlStyle1}"
                    TabStripPlacement="Bottom" Background="Transparent" fl:TabControlExtensions.SelectOnlyVisibleTabs="True" 
                    ItemsSource="{Binding Hierarchical.Selected, Converter={conv:HierarchicalResultNodeToVariationsConverter}}"
                    Visibility="{Binding Hierarchical.Selected, Converter={conv:HierarchicalResultNodeToVariationsVisibleConverter}}"
                    d:DataContext="{d:DesignInstance Type=main:MainViewModel, IsDesignTimeCreatable=False}" >
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding IdScryFall}"/>
                </DataTemplate>
            </TabControl.ItemTemplate>
            <TabControl.ContentTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Image Source="{Binding Converter={conv:CardToImageConverter}, ConverterParameter=0}" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="{Binding Converter={conv:CardToRotationAngleConverter}, ConverterParameter=0}" />
                                    <TranslateTransform>
                                        <TranslateTransform.X>
                                            <MultiBinding Converter="{conv:HeightToMoveConverter}" ConverterParameter="0">
                                                <Binding />
                                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Image}}" />
                                                <Binding Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Image}}" />
                                            </MultiBinding>
                                        </TranslateTransform.X>
                                    </TranslateTransform>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                        <Image Source="{Binding Converter={conv:CardToImageConverter}, ConverterParameter=1}" RenderTransformOrigin="0.5,0.5" >
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="{Binding Converter={conv:CardToRotationAngleConverter}, ConverterParameter=1}" />
                                    <TranslateTransform>
                                        <TranslateTransform.X>
                                            <MultiBinding Converter="{conv:HeightToMoveConverter}" ConverterParameter="1">
                                                <Binding />
                                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Image}}" />
                                                <Binding Path="ActualWidth" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Image}}" />
                                            </MultiBinding>
                                        </TranslateTransform.X>
                                    </TranslateTransform>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </StackPanel>
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>
    </ControlTemplate>

    <!-- Quantity for card change -->
    <ControlTemplate x:Key="QuantityControlTemplate">
        <Grid Margin="5" d:DataContext="{d:DesignInstance Type=input:CardSourceViewModel, IsDesignTimeCreatable=False}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="70"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="70"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0"  Content="Count" HorizontalAlignment="Center"/>
            <Slider Grid.Column="1" Margin="0,5"  Value="{fl:TwoWayBinding Count}" Maximum="{Binding MaxCount}"/>
            <StackPanel Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
                <Label Content="{Binding Count}"/>
                <Label Content="/"/>
                <Label Content="{Binding MaxCount}"/>
            </StackPanel>
        </Grid>
    </ControlTemplate>
    
</ResourceDictionary>
