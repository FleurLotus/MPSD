<Window x:Class="MagicPictureSetDownloader.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:fl="http://schemas.fleurlotus.com/xaml/"
        xmlns:main="clr-namespace:MagicPictureSetDownloader.ViewModel.Main;assembly=MagicPictureSetDownloader.ViewModel"
        xmlns:res="clr-namespace:MagicPictureSetDownloader.Resources"
        xmlns:conv="clr-namespace:MagicPictureSetDownloader.Converter"
        d:DataContext="{d:DesignInstance Type=main:MainViewModel, IsDesignTimeCreatable=False}"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        Title="{Binding Title}" Height="600" Width="1000" Icon="{Binding Source={x:Static res:ResourceManager.Icon}, Converter={conv:BitmapToImageConverter}}" >
    <Window.Resources>
        <ResourceDictionary>
            <fl:SeparatorStyleSelector x:Key="separatorStyleSelector"/>
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style>
            <Storyboard x:Key="Storyboard" RepeatBehavior="Forever">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                    <SplineDoubleKeyFrame KeyTime="00:00:02" Value="360"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ResourceDictionary>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard Storyboard="{StaticResource Storyboard}"/>
        </EventTrigger>
    </Window.Triggers>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="DialogWanted" SourceObject="{Binding}">
            <i:CallMethodAction MethodName="DialogWanted" />
        </i:EventTrigger>
        <i:EventTrigger EventName="VersionRequested" SourceObject="{Binding}">
            <i:CallMethodAction MethodName="VersionRequested" />
        </i:EventTrigger>
        <i:EventTrigger EventName="AutoUpdateDatabaseRequested" SourceObject="{Binding}">
            <i:CallMethodAction MethodName="AutoUpdateDatabaseRequested" />
        </i:EventTrigger>
        <i:EventTrigger EventName="UpdateDatabaseRequested" SourceObject="{Binding}">
            <i:CallMethodAction MethodName="UpdateDatabaseRequested" />
        </i:EventTrigger>
        <i:EventTrigger EventName="CloseRequested" SourceObject="{Binding}">
            <i:CallMethodAction MethodName="Close" />
        </i:EventTrigger>
        <i:EventTrigger EventName="InputRequested" SourceObject="{Binding}">
            <i:CallMethodAction MethodName="InputRequested" />
        </i:EventTrigger>
        <i:EventTrigger EventName="ImportExportRequested" SourceObject="{Binding}">
            <i:CallMethodAction MethodName="ImportExportRequested" />
        </i:EventTrigger>
        <i:EventTrigger EventName="DatabaseModificationRequested" SourceObject="{Binding}">
            <i:CallMethodAction MethodName="DatabaseModificationRequested" />
        </i:EventTrigger>
        <i:EventTrigger EventName="PreconstructedDecksRequested" SourceObject="{Binding}">
            <i:CallMethodAction MethodName="PreconstructedDecksRequested" />
        </i:EventTrigger>
        <i:EventTrigger EventName="ExceptionOccured" SourceObject="{Binding}">
            <i:CallMethodAction MethodName="ExceptionOccured" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <!-- Split Menu/Others/Status Bar -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Menu IsMainMenu="True" Grid.Row="0" ItemsSource="{Binding MenuRoot.Children}" ItemContainerStyleSelector="{StaticResource separatorStyleSelector}"/>
        <Grid Margin="5" Grid.Row="1">
            <!-- Split Filter/Others -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="25" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0">
                <StackPanel Margin="0,25">
                    <ToggleButton Content=">>" Height="25" IsChecked="{fl:TwoWayBinding ShowFilterConfig}" />
                </StackPanel>
            </Border>

            <Grid Grid.Column="1" IsEnabled="{Binding ShowFilterConfig, Converter={fl:BoolInvertConverter}}">
                <!-- Split Tree/Text/Image -->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="5*"/>
                </Grid.ColumnDefinitions>

                <Border Grid.Column="0" >
                    <ContentControl Content="{Binding Hierarchical}" ContextMenuService.IsEnabled="{Binding ContextMenuRoot.HasChild}">
                        <ContentControl.ContextMenu>
                            <ContextMenu ItemsSource="{Binding ContextMenuRoot.Children}"
                                         ItemContainerStyleSelector="{StaticResource separatorStyleSelector}"/>
                        </ContentControl.ContextMenu>
                    </ContentControl>
                </Border>
                <GridSplitter Grid.Column="1"/>

                <Border Grid.Column="2">
                    <!-- Card Data display  -->
                    <ContentControl Content="{Binding Hierarchical.Selected}" />
                </Border>
            </Grid>

            <!-- Analysers control -->
            <ContentControl Grid.Column="1" Margin="2,25" Width="180" Height="Auto" VerticalAlignment="Top" HorizontalAlignment="Left"
                            Visibility="{Binding ShowFilterConfig, Converter={fl:BoolToVisibilityConverter}}" Content="{Binding Analysers}"/>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.Resources>
                <Style TargetType="Label">
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Content="{Binding StatusBarInfo}" Visibility="{Binding StatusBarInfo, Converter={fl:AggregateConverter {fl:ObjectNullToBoolConverter}, {fl:BoolInvertConverter}, {fl:BoolToVisibilityConverter}}}"/>
            <Label Grid.Column="2" Content="New version available!" Foreground="Red" Visibility="{Binding UpgradeStatus, Converter={fl:AggregateConverter {fl:EnumMatchToBooleanConverter}, {fl:BoolToVisibilityConverter}}, ConverterParameter=NeedToBeUpdated}" />
            <Label Grid.Column="2" Content="Error while checking" Foreground="Red" Visibility="{Binding UpgradeStatus, Converter={fl:AggregateConverter {fl:EnumMatchToBooleanConverter}, {fl:BoolToVisibilityConverter}}, ConverterParameter=CantCheck}" />
            <Button Grid.Column="3" Content="Hide" Padding="5,0" Command="{Binding HideResultCommand}" Visibility="{Binding UpgradeStatus, Converter={fl:AggregateConverter {fl:EnumMatchToBooleanConverter}, {fl:BoolToVisibilityConverter}}, ConverterParameter=NeedToBeUpdated@CantCheck}" />
        </Grid>
        <!-- Loading -->
        <Grid Grid.Row="0" Grid.RowSpan="3" Background="White" Visibility="{Binding Loading, Converter={fl:BoolToVisibilityConverter}}">
            <Ellipse x:Name="Ellipse" StrokeThickness="20" RenderTransformOrigin="0.5,0.5" Width="300" Height="300">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                    </TransformGroup>
                </Ellipse.RenderTransform>
                <Ellipse.Stroke>
                    <LinearGradientBrush EndPoint="0.445,0.997" StartPoint="0.555,0.003">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="#FF0052FF" Offset="1"/>
                    </LinearGradientBrush>
                </Ellipse.Stroke>
            </Ellipse>
            <Label Content="Processing ..." VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="20" FontWeight="Bold"/>
        </Grid>
    </Grid>
</Window>
