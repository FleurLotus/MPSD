<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:binding="clr-namespace:Common.WPF.Binding"
                    >
    
    <Style x:Key="VCentered" TargetType="Control">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    
    <Style x:Key="HVCentered" TargetType="Control" BasedOn="{StaticResource VCentered}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>
    
    <Style x:Key="HRigthVCentered" TargetType="Control" BasedOn="{StaticResource VCentered}">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>

    <Style x:Key="DataGridCellVCenter" TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="DataGridCellHVCenter" TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type MenuItem}" >
        <Setter Property="Header" Value="{Binding Path=MenuText}"/>
        <Setter Property="Command" Value="{Binding Path=Command}"/>
        <Setter Property="CommandParameter" Value="{Binding Path=CommandParameter}"/>
        <Setter Property="IsCheckable" Value="{Binding Path=IsCheckable}"/>
        <Setter Property="IsChecked" Value="{binding:TwoWayBinding IsChecked}"/>
    </Style>

    <Style TargetType="{x:Type MenuItem}" x:Key="separatorStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Separator HorizontalAlignment="Stretch" IsEnabled="false"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BottomButton"  TargetType="Button">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Width" Value="70"/>
    </Style>

    <!--
    
    Add Validation.ErrorTemplate="{StaticResource ErrorTemplate}" in the wanted control
    
    <Style TargetType="{x:Type ComboBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    
    
    <ControlTemplate x:Key="ErrorTemplate">
        <DockPanel LastChildFill="True">
            <Border BorderBrush="Red" BorderThickness="1">
                <AdornedElementPlaceholder />
            </Border>
        </DockPanel>
    </ControlTemplate>
    
    -->
</ResourceDictionary>